# Default values for jenkinsci
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# number of copies
replicaCount: 1

# sc name
storageClassName: managed-nfs-storage

# namespace definition
namespaceOverride: {}

# Initialize container information
busybox:
  name: fix-permissions
  image: "busybox"
  tag: ""
  PullPolicy: IfNotPresent


## Init container resources defaults
initContainer:
  resources:
    requests:
      memory: 10Mi
      cpu: 10m

image:
  repository: jenkins/jenkins
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "2.401-jdk11"



# Configure nfs storage server address nfs data storage directory external mount data directory
nfs:
  server: 192.168.1.60
  path: /k8ssc/jenkinsci
  External_mount_Path: /global


persistence:
  existingClaim:
  ## jenkins data Persistent Volume Storage Class
  ## If defined, storageClassName: <storageClass>
  ## If set to "-", storageClassName: "", which disables dynamic provisioning
  ## If undefined (the default) or set to null, no storageClassName spec is
  ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
  ##   GKE, AWS & OpenStack)
  ##
  jenkins_homePath: /var/jenkins_home
  storageClass:
  enabled: true
  capacity:
    storage: 100Gi
  accessModes: "ReadWriteOnce"
  persistentVolumeReclaimPolicy: Retain

imagePullSecrets: []
nameOverride: "jenkinsci"
fullnameOverride: "jenkinsci"

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: NodePort
  http:
    port: 8080
    targetPort: http
    nodePort: 32080
  agent:
    port: 50000
    targetPort: agent
    nodePort: 32050

ingress:
  enabled: false
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: jenkinsci-dashboard.runjs.cn
      paths: []
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources:
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  limits:
    cpu: "4000m"
    memory: 4Gi
  requests:
    cpu: "2000m"
    memory: 2Gi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}
